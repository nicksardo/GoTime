// Generated by CoffeeScript 1.7.1
(function() {
  window.GoTime = (function() {
    GoTime._offset = 0;

    GoTime._precision = null;

    GoTime._firstSyncCallbackRan = false;

    GoTime._lastSyncTime = null;

    GoTime._syncInterval = 600000;

    GoTime._ajaxSampleSize = 1;

    GoTime._synchronizing = false;

    GoTime._firstSyncCallback = null;

    function GoTime() {
      if (GoTime._synchronizing === false) {
        setInterval(GoTime._sync, GoTime._syncInterval);
        GoTime._synchronizing = true;
        GoTime._sync();
      }
      return GoTime.now();
    }

    GoTime.now = function() {
      return new Date(Date.now() + GoTime._offset);
    };

    GoTime.whenSynced = function(callback) {
      return GoTime._firstSyncCallback = callback;
    };

    GoTime.getOffset = function() {
      return GoTime._offset;
    };

    GoTime._ajaxSample = function(i, callback) {
      var req, requestTime;
      req = new XMLHttpRequest();
      req.open("GET", '/time');
      req.onreadystatechange = function() {
        var responseTime, sample, serverTime;
        responseTime = Date.now();
        if (req.readyState === 4) {
          if (req.status === 200) {
            serverTime = new Date(parseInt(req.responseText)).getTime();
            sample = GoTime._calculateOffset(requestTime, responseTime, serverTime);
            callback(i, sample);
          }
        }
      };
      requestTime = Date.now();
      req.send();
      return null;
    };

    GoTime._sync = function() {
      GoTime._ajaxSample(1, function(i, sample) {
        return GoTime._reviseOffset(sample);
      });
    };

    GoTime._calculateOffset = function(requestTime, responseTime, serverTime) {
      var duration, precision;
      duration = responseTime - requestTime;
      precision = duration / 2;
      return {
        offset: serverTime + precision - responseTime,
        precision: precision
      };
    };

    GoTime._reviseOffset = function(sample) {
      GoTime._offset = sample.offset;
      GoTime._precision = sample.precision;
      GoTime._lastSyncTime = GoTime.now();
      if (!GoTime._firstSyncCallbackRan && (GoTime._firstSyncCallback != null)) {
        return GoTime._firstSyncCallback();
      } else {

      }
    };

    return GoTime;

  })();

}).call(this);

//# sourceMappingURL=GoTime.map
