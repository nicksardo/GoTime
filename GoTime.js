// Generated by CoffeeScript 1.7.1
(function() {
  window.GoTime = (function() {
    GoTime._syncCount = 0;

    GoTime._offset = 0;

    GoTime._precision = null;

    GoTime._lastSyncTime = null;

    GoTime._syncInterval = 900000;

    GoTime._synchronizing = false;

    GoTime._ajaxURL = null;

    GoTime._ajaxSampleSize = 1;

    GoTime._firstSyncCallbackRan = false;

    GoTime._firstSyncCallback = null;

    GoTime._onSyncCallback = null;

    GoTime._wsCall = null;

    GoTime._wsRequestTime = null;

    function GoTime() {
      GoTime._setupSync;
      return GoTime.now();
    }

    GoTime._setupSync = function() {
      if (GoTime._synchronizing === false) {
        GoTime._synchronizing = true;
        GoTime._sync();
        setTimeout(GoTime._sync, 4000);
        setInterval(GoTime._sync, GoTime._syncInterval);
      }
    };

    GoTime.now = function() {
      return new Date(Date.now() + GoTime._offset);
    };

    GoTime.getOffset = function() {
      return GoTime._offset;
    };

    GoTime.getPrecision = function() {
      return GoTime._precision;
    };

    GoTime.setAjaxURL = function(url) {
      GoTime._ajaxURL = url;
      return GoTime._setupSync();
    };

    GoTime.whenSynced = function(callback) {
      return GoTime._firstSyncCallback = callback;
    };

    GoTime.onSync = function(callback) {
      return GoTime._onSyncCallback = callback;
    };

    GoTime.wsSend = function(callback) {
      return GoTime._wsCall = callback;
    };

    GoTime.wsReceived = function(serverTimeString) {
      var responseTime, sample, serverTime;
      responseTime = Date.now();
      serverTime = GoTime._dateFromService(serverTimeString);
      sample = GoTime._calculateOffset(GoTime._wsRequestTime, responseTime, serverTime);
      return GoTime._reviseOffset(sample);
    };

    GoTime._ajaxSample = function(i, callback) {
      var req, requestTime;
      req = new XMLHttpRequest();
      req.open("GET", GoTime._ajaxURL);
      req.onreadystatechange = function() {
        var responseTime, sample, serverTime;
        responseTime = Date.now();
        if (req.readyState === 4) {
          if (req.status === 200) {
            serverTime = GoTime._dateFromService(req.responseText);
            sample = GoTime._calculateOffset(requestTime, responseTime, serverTime);
            GoTime._reviseOffset(sample);
          }
        }
      };
      requestTime = Date.now();
      req.send();
      return true;
    };

    GoTime._sync = function() {
      var success;
      if (GoTime._wsCall != null) {
        GoTime._wsRequestTime = Date.now();
        success = GoTime._wsCall();
        if (success) {
          GoTime._syncCount++;
          return;
        }
      }
      if (GoTime._ajaxURL != null) {
        success = GoTime._ajaxSample(1);
        if (success) {
          GoTime._syncCount++;
        }
      }
    };

    GoTime._calculateOffset = function(requestTime, responseTime, serverTime) {
      var duration, oneway;
      duration = responseTime - requestTime;
      oneway = duration / 2;
      return {
        offset: serverTime - requestTime + oneway,
        precision: oneway
      };
    };

    GoTime._reviseOffset = function(sample) {
      if (isNaN(sample.offset) || isNaN(sample.precision)) {
        return;
      }
      GoTime._offset = sample.offset;
      GoTime._precision = sample.precision;
      GoTime._lastSyncTime = GoTime.now();
      if (!GoTime._firstSyncCallbackRan && (GoTime._firstSyncCallback != null)) {
        GoTime._firstSyncCallbackRan = true;
        return GoTime._firstSyncCallback();
      } else if (GoTime._onSyncCallback != null) {
        return GoTime._onSyncCallback();
      }
    };

    GoTime._dateFromService = function(text) {
      return new Date(parseInt(text));
    };

    return GoTime;

  })();

}).call(this);

//# sourceMappingURL=GoTime.map
